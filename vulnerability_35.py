# vulnerability_35.py
import re
import requests

def scan(url):
    # Your scanning code for Weak passwords policies
    response = requests.get(url + '/login')
    if response.status_code == 200:
        # Check if the page contains any warnings about weak password policies
        weak_password_warnings = re.findall(r'Your password must be at least (\d+) characters', response.text)
        if weak_password_warnings:
            min_length = int(weak_password_warnings[0])
            if min_length < 10:
                print('Weak Password Policy Detected. Minimum password length is ' + str(min_length))
            else:
                print('Password complexity rules are enforced.')

        # Check if the page allows common weak passwords
        login_form = re.search(r'<form.*?name="login".*?>(.*?)</form>', response.text, re.DOTALL)
        if login_form:
            weak_passwords = ['password', '123456', 'qwerty']
            for weak_password in weak_passwords:
                form_data = {
                    'username': 'test',
                    'password': weak_password
                }
                login_response = requests.post(url + '/login', data=form_data)
                if login_response.status_code == 200:
                    print('Weak Password Policy Detected. Common weak password ' + weak_password + ' allowed.')
                else:
                    print('Password complexity rules are enforced.')

        # Other checks for weak password policies
        # Check if password complexity rules are enforced
        if not re.search(r'Your password must contain at least one uppercase letter', response.text):
            print('Weak Password Policy Detected. No uppercase letter required.')
        else:
            print('Password complexity rules are enforced.')
        
        if not re.search(r'Your password must contain at least one lowercase letter', response.text):
            print('Weak Password Policy Detected. No lowercase letter required.')
        else:
            print('Password complexity rules are enforced.')
            
        if not re.search(r'Your password must contain at least one number', response.text):
            print('Weak Password Policy Detected. No number required.')
        else:
            print('Password complexity rules are enforced.')
            
        if not re.search(r'Your password must contain at least one special character', response.text):
            print('Weak Password Policy Detected. No special character required.')
        else:
            print('Password complexity rules are enforced.')

    return f'Weak passwords policies scan result for {url}'

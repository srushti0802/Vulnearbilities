# vulnerability_33.py
import requests
def scan(url):
    # Check if the URL has a user-controllable CSS location
    if 'css=' in url:
        # Test for CSS injection using malicious CSS payloads
        payloads = [';display:none', '}body{display:none}', '/*/*/body{display:none}']
        
        # Implement more tests for css injection
        payloads.extend(['body{visibility:hidden}', 'body{position:absolute;left:-9999px}'])
        
        for payload in payloads:
            test_url = f'{url}&css={payload}'
            response = requests.get(test_url)
            
            # Check response HTML for hidden body tag
            if '<body style="display:none"' in response.text:
                print(f'CSS Injection detected on {url} using payload: {payload}')
                return True
            
            # Check response HTML for hidden body tag
            if '<body style="visibility:hidden"' in response.text:
                print(f'CSS Injection detected on {url} using payload: {payload}')  
                return True
                
            # Check response HTML for offscreen body tag  
            if '<body style="position:absolute;left:-9999px"' in response.text:
                print(f'CSS Injection detected on {url} using payload: {payload}')
                return True
        
    print(f'No CSS Injection detected on {url}')
    
    return f'CSS Injection scan result for {url}'


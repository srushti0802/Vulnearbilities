# vulnerability_5.py
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def scan(url):
    # Initialize Selenium WebDriver
    driver = webdriver.Firefox()
    
    # Load the target URL
    driver.get(url)
    
    # Find all the links on the page
    links = driver.find_elements_by_tag_name('a')
    
    # Initialize a list to store the results
    results = []
    
    # Iterate through each link
    for link in links:
        href = link.get_attribute('href')
        
        # If the link is not a relative link, skip it
        if not href.startswith('/'):
            continue
        
        # Click on the link
        link.click()
        
        # Wait for the page to load
        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, 'body')))
        
        # Check if the page contains the text "Broken Access Control Vulnerability Scan Result"
        if driver.find_element_by_xpath('//body[contains(text(), "Broken Access Control Vulnerability Scan Result")]'):
            results.append(f'Broken Access Control Vulnerability Scan Result on {href}')
        
        # Go back to the previous page
        driver.back()
    
        # Close the WebDriver
        driver.quit()
    
    # Return the results
    return f'Results: {results}'